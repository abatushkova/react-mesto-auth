{"version":3,"sources":["images/popup/__info-sign/fail.svg","images/header/__logo/logo.svg","images/popup/__info-sign/success.svg","components/Header.js","contexts/CurrentUserContext.js","components/Card.js","components/Main.js","components/Footer.js","components/ButtonClose.js","components/PopupContainer.js","components/PopupWithForm.js","components/ButtonSubmit.js","components/EditProfilePopup.js","components/EditAvatarPopup.js","components/AddCardPopup.js","components/ConfirmPopup.js","components/ImagePopup.js","components/ProtectedRoute.js","components/BookForm.js","components/InfoTooltip.js","components/Login.js","components/Register.js","utils/auth.js","utils/api.js","components/App.js","serviceWorker.js","index.js"],"names":["module","exports","Header","props","loggedIn","onSignOut","email","path","link","className","src","logo","alt","type","id","htmlFor","onClick","to","CurrentUserContext","React","createContext","Card","card","onCardClick","onCardLike","onCardDelete","currentUser","useContext","isLiked","likes","some","i","_id","cardLikeBtnClassName","buttonDelete","owner","title","name","length","Main","onEditAvatar","onEditProfile","onAddCard","cards","avatar","about","map","key","Footer","ButtonClose","closeHandler","PopupContainer","children","popupContainer","useRef","useEffect","document","addEventListener","handleClick","handleEsc","removeEventListener","evt","current","contains","target","ref","PopupWithForm","isOpen","onClose","onSubmit","noValidate","ButtonSubmit","isDisabled","buttonSubmitClassName","disabled","EditProfilePopup","onUpdateUser","useState","setName","description","setDescription","inputClass","errorClass","errorMsg","nameError","setNameError","descriptionError","setDescriptionError","isFormValid","setIsFormValid","isLoading","setIsLoading","preventDefault","finally","placeholder","value","onChange","input","validity","valid","validationMessage","pattern","minLength","maxLength","required","EditAvatarPopup","handleChange","setState","hideInputError","showInputError","handleClose","handleSubmit","onUpdateAvatar","createRef","state","this","Component","AddCardPopup","updatedForm","formProps","updatedInput","form","onAddCardSubmit","ConfirmPopup","onCardDeleteConfirm","ImagePopup","ProtectedRoute","BookForm","buttonText","InfoTooltip","infoData","text","Login","onLogin","isTooltipOpen","onTooltipClose","setEmail","password","setPassword","success","setInfoData","renderErrorMsg","fail","then","res","catch","err","console","error","Register","onRegister","history","useHistory","push","BASE_URL","api","options","_baseUrl","baseUrl","_headers","headers","url","params","fetch","body","JSON","stringify","response","ok","json","Promise","reject","status","_fetch","method","cardID","like","authorization","App","setCurrentUser","isEditAvatarPopupOpen","setIsEditAvatarPopupOpen","isEditProfilePopupOpen","setIsEditProfilePopupOpen","isAddCardPopupOpen","setIsAddCardPopupOpen","isImagePopupOpen","setIsImagePopupOpen","isConfirmPopupOpen","setIsConfirmPopupOpen","isInfoTooltipOpen","setIsInfoTooltipOpen","selectedCard","setSelectedCard","setCards","setLoggedIn","all","localStorage","getItem","getUserInfo","getCardList","token","user","data","auth","closeAllPopups","exact","Provider","removeItem","changeCardLikeStatus","newCard","newCards","c","setUserAvatar","setUserInfo","postCard","deleteCard","filter","setItem","Error","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","getElementById","navigator","serviceWorker","ready","registration","unregister","message"],"mappings":"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","file":"static/js/main.d20689c2.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/fail.4072126c.svg\";","module.exports = __webpack_public_path__ + \"static/media/logo.5746c0f0.svg\";","module.exports = __webpack_public_path__ + \"static/media/success.e38b395c.svg\";","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport logo from '../images/header/__logo/logo.svg';\n\nconst Header = ({ ...props }) => {\n  const {\n    loggedIn,\n    onSignOut,\n    email,\n    path,\n    link\n  } = props;\n\n  return (\n    <header className=\"header page__section\">\n      <img\n        src={logo}\n        alt=\"Логотип Место\"\n        className=\"header__logo\"\n      />\n      {loggedIn ? (\n        <>\n          <input\n            type=\"checkbox\"\n            id=\"burger-btn\"\n            className=\"header__burger-checkbox\"\n          />\n          <label className=\"header__burger-icon\" htmlFor=\"burger-btn\">\n            <span className=\"header__burger\"></span>\n          </label>\n          <nav className=\"menu\">\n            <p className=\"menu__item\">{email}</p>\n            <button\n              type=\"button\"\n              onClick={onSignOut} \n              className=\"menu__item menu__button\"\n            >\n              Выйти\n            </button>\n          </nav>\n        </>\n      ) : (\n        <Link className=\"header__link\" to={path}>{link}</Link>\n      )}\n    </header>\n  );\n}\n\nexport default Header;\n","import React from 'react';\n\nexport const CurrentUserContext = React.createContext(null);\n","import React, { useContext } from 'react';\nimport { CurrentUserContext } from '../contexts/CurrentUserContext';\n\nfunction Card(props) {\n  const {\n    card,\n    onCardClick,\n    onCardLike,\n    onCardDelete\n  } = props;\n  const currentUser = useContext(CurrentUserContext);\n\n  const isLiked = card.likes.some(i => i._id === currentUser._id);\n\n  const cardLikeBtnClassName = (\n    `elements__like-btn ${isLiked && 'elements__like-btn_active'}`\n  );\n\n  const handleClick = () => {\n    onCardClick(card);\n  };\n\n  const handleLikeClick = () => {\n    onCardLike(card);\n  };\n\n  const handleDeleteClick = () => {\n    onCardDelete(card);\n  };\n\n  const buttonDelete = (card.owner._id === currentUser._id) && (\n    <button\n      type=\"button\" \n      className=\"elements__delete-btn\"\n      title=\"Удалить\" \n      onClick={handleDeleteClick}\n    ></button>\n  );\n\n  return (\n    <div className=\"elements__item\">\n      {buttonDelete}\n      <img\n        src={card.link}\n        alt={card.name}\n        className=\"elements__img\"\n        onClick={handleClick}\n      />\n      <div className=\"elements__info\">\n        <h2 className=\"elements__title\">{card.name}</h2>\n        <div className=\"elements__like\">\n          <button\n            type=\"button\"\n            className={cardLikeBtnClassName}\n            title=\"Мне нравится\"\n            onClick={handleLikeClick}>\n          </button>\n          <span className=\"elements__like-counter\">\n            {card.likes.length}\n          </span>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default Card;\n","import React, { useContext } from 'react';\nimport Card from './Card';\nimport { CurrentUserContext } from '../contexts/CurrentUserContext';\n\nfunction Main(props) {\n  const currentUser = useContext(CurrentUserContext);\n  const {\n    onEditAvatar,\n    onEditProfile,\n    onAddCard,\n    onCardClick,\n    cards,\n    onCardLike,\n    onCardDelete,\n  } = props;\n\n  return (\n    <main className=\"container page__section\">\n      <section className=\"profile container__profile\">\n        <div className=\"profile__avatar\">\n          <img\n            src={currentUser.avatar}\n            alt={currentUser.name}\n            className=\"profile__img\"\n          />\n          <button\n            type=\"button\"\n            className=\"profile__update-av-btn\"\n            title=\"Сменить аватар\"\n            onClick={onEditAvatar}>\n          </button>\n        </div>\n        <div className=\"profile__details\">\n          <h1 className=\"profile__name\">{currentUser.name}</h1>\n          <button\n            type=\"button\"\n            className=\"profile__edit-btn\"\n            title=\"Редактировать профиль\"\n            onClick={onEditProfile}>\n          </button>\n          <p className=\"profile__info\">{currentUser.about}</p>\n        </div>\n        <button\n          type=\"button\"\n          className=\"profile__add-btn\"\n          title=\"Добавить фотографию\"\n          onClick={onAddCard}>\n        </button>\n      </section>\n      <section className=\"elements\">\n        {cards.map((card) => (\n          <Card\n            key={card._id}\n            card={card}\n            onCardLike={onCardLike}\n            onCardClick={onCardClick}\n            onCardDelete={onCardDelete}\n          />\n        ))}\n      </section>\n    </main>\n  );\n}\n\nexport default Main;\n","import React from 'react';\n\nfunction Footer() {\n  return (\n    <footer className=\"footer page__section\">\n      <p className=\"footer__copyright\">&copy; 2020 Mesto Russia</p>\n    </footer>\n  );\n}\n\nexport default Footer;\n","import React from 'react';\n\nfunction ButtonClose(props) {\n  return (\n    <button\n      type=\"button\"\n      className=\"popup__close-btn\"\n      title=\"Закрыть\"\n      onClick={props.closeHandler}>\n    </button>\n  );\n}\n\nexport default ButtonClose;\n","import React, { useEffect, useRef } from 'react';\n\nfunction PopupContainer(props) {\n  const { closeHandler, className, children } = props;\n  const popupContainer = useRef(null);\n\n  useEffect(() => {\n    document.addEventListener('click', handleClick, false);\n    document.addEventListener('keydown', handleEsc, false);\n\n    return () => {\n      document.removeEventListener('click', handleClick, false);\n      document.removeEventListener('keydown', handleEsc, false);\n    };\n  });\n\n  const handleClick = (evt) => {\n    if (\n      popupContainer.current\n      && !popupContainer.current.contains(evt.target)\n    ) {\n      closeHandler();\n    }\n  };\n\n  const handleEsc = (evt) => {\n    if (evt.key && evt.key === 'Escape') {\n      closeHandler();\n    }\n  };\n\n  return (\n    <div className={className} ref={popupContainer}>\n      {children}\n    </div>\n  );\n}\n\nexport default PopupContainer;\n","import React from 'react';\nimport ButtonClose from './ButtonClose';\nimport PopupContainer from './PopupContainer';\n\nfunction PopupWithForm(props) {\n  const {\n    name,\n    title,\n    isOpen,\n    onClose,\n    onSubmit,\n    children\n  } = props;\n\n  return (isOpen ? (\n    <div className={`popup popup_type_${name} popup_opened`}>\n      <PopupContainer\n        className=\"popup__container\"\n        closeHandler={onClose}\n      >\n        <h2 className=\"popup__title\">{title}</h2>\n        <form\n          className=\"popup__form\"\n          name={name}\n          id={`${name}-form`}\n          noValidate\n          onSubmit={onSubmit}\n        >\n          {children}\n        </form>\n        <ButtonClose closeHandler={onClose} />\n      </PopupContainer>\n    </div>\n  ) : (\n    <div className={`popup popup_type_${name}`}></div>\n  ));\n}\n\nexport default PopupWithForm;\n","import React from 'react';\n\nfunction ButtonSubmit(props) {\n  const { isDisabled, children } = props;\n  const buttonSubmitClassName = (\n    `popup__submit-btn ${isDisabled ? 'popup__submit-btn_disabled' : ''}`\n  );\n\n  return (\n    <button\n      type=\"submit\"\n      className={buttonSubmitClassName}\n      disabled={isDisabled}\n    >\n      {children}\n    </button>\n  );\n}\n\nexport default ButtonSubmit;\n","import React, { useState, useEffect, useContext } from 'react';\nimport PopupWithForm from './PopupWithForm';\nimport ButtonSubmit from './ButtonSubmit';\nimport { CurrentUserContext } from '../contexts/CurrentUserContext';\n\nfunction EditProfilePopup(props) {\n  const { isOpen, onClose, onUpdateUser } = props;\n  const currentUser = useContext(CurrentUserContext);\n  const [name, setName] = useState('');\n  const [description, setDescription] = useState('');\n  const [nameError, setNameError] = useState({\n    inputClass: '',\n    errorClass: '',\n    errorMsg: '',\n  });\n  const [descriptionError, setDescriptionError] = useState({\n    inputClass: '',\n    errorClass: '',\n    errorMsg: '',\n  });\n  const [isFormValid, setIsFormValid] = useState(true);\n  const [isLoading, setIsLoading] = useState(false);\n\n  useEffect(() => {\n    setName(currentUser.name);\n    setDescription(currentUser.about);\n  }, [currentUser]);\n\n  const handleNameChange = (evt) => {\n    const input = evt.target;\n    setName(input.value);\n\n    if (!input.validity.valid) {\n      setNameError({\n        inputClass: 'popup__input_type_error',\n        errorClass: 'popup__error_visible',\n        errorMsg: input.validationMessage,\n      });\n      setIsFormValid(false);\n    } else {\n      setNameError({\n        inputClass: '',\n        errorClass: '',\n        errorMsg: '',\n      });\n      setIsFormValid(true);\n    }\n  };\n\n  const handleDescriptionChange = (evt) => {\n    const input = evt.target;\n    setDescription(input.value);\n\n    if (!input.validity.valid) {\n      setDescriptionError({\n        inputClass: 'popup__input_type_error',\n        errorClass: 'popup__error_visible',\n        errorMsg: input.validationMessage,\n      });\n      setIsFormValid(false);\n    } else {\n      setDescriptionError({\n        inputClass: '',\n        errorClass: '',\n        errorMsg: '',\n      });\n      setIsFormValid(true);\n    }\n  };\n\n  const handleSubmit = (evt) => {\n    evt.preventDefault();\n    setIsLoading(true);\n\n    onUpdateUser({\n      name,\n      about: description,\n    })\n      .finally(() => {\n        setIsFormValid(true);\n        setIsLoading(false);\n      });\n  };\n\n  const handleClose = () => {\n    onClose();\n\n    setName(currentUser.name);\n    setDescription(currentUser.about);\n    setIsFormValid(true);\n    setNameError({\n      inputClass: '',\n      errorClass: '',\n      errorMsg: '',\n    });\n    setDescriptionError({\n      inputClass: '',\n      errorClass: '',\n      errorMsg: '',\n    });\n  };\n\n  return (\n    <PopupWithForm\n      name=\"profile\"\n      title=\"Редактировать профиль\"\n      isOpen={isOpen}\n      onClose={handleClose}\n      onSubmit={handleSubmit}\n    >\n      <label className=\"popup__label\" htmlFor=\"name-input\">\n        <input\n          type=\"text\"\n          name=\"name\"\n          id=\"name-input\"\n          className={`popup__input ${nameError.inputClass}`}\n          placeholder=\"Имя\"\n          value={name}\n          onChange={handleNameChange}\n          pattern=\"[a-zA-Zа-яА-ЯёЁ\\s-]+\"\n          minLength={2}\n          maxLength={40}\n          required={true}\n        />\n        <span\n          className={`popup__error ${nameError.errorClass}`}\n          id=\"name-input-error\"\n        >\n          {nameError.errorMsg}\n        </span>\n      </label>\n      <label className=\"popup__label\" htmlFor=\"about-input\">\n        <input\n          type=\"text\"\n          name=\"about\"\n          id=\"about-input\"\n          className={`popup__input ${descriptionError.inputClass}`}\n          placeholder=\"О себе\"\n          value={description}\n          onChange={handleDescriptionChange}\n          minLength={2}\n          maxLength={200}\n          required={true}\n        />\n        <span\n          className={`popup__error ${descriptionError.errorClass}`}\n          id=\"about-input-error\"\n        >\n          {descriptionError.errorMsg}\n        </span>\n      </label>\n      <ButtonSubmit isDisabled={!isFormValid}>\n        {isLoading ? ('Загрузка...') : ('Сохранить')}\n      </ButtonSubmit>\n    </PopupWithForm>\n  );\n}\n\nexport default EditProfilePopup;\n","import React from 'react';\nimport PopupWithForm from './PopupWithForm';\nimport ButtonSubmit from './ButtonSubmit';\n\nclass EditAvatarPopup extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.avatar = React.createRef();\n\n    this.state = {\n      inputClass: '',\n      errorClass: '',\n      errorMsg: '',\n      isFormValid: false,\n      isLoading: false,\n    };\n  }\n\n  render() {\n    return (\n      <PopupWithForm\n        name=\"avatar\"\n        title=\"Обновить аватар\"\n        isOpen={this.props.isOpen}\n        onClose={this.handleClose}\n        onSubmit={this.handleSubmit}\n      >\n        <label className=\"popup__label\" htmlFor=\"avatar-input\">\n          <input \n            type=\"url\"\n            name=\"avatar\"\n            className={`popup__input ${this.state.inputClass}`}\n            id=\"avatar-input\"\n            ref={this.avatar}\n            onChange={this.handleChange}\n            placeholder=\"Ссылка\"\n            required={true}\n          />\n          <span \n            className={`popup__error ${this.state.errorClass}`}\n            id=\"avatar-input-error\"\n          >\n            {this.state.errorMsg}\n          </span>\n        </label>\n        <ButtonSubmit isDisabled={!this.state.isFormValid}>\n          {this.state.isLoading ? ('Загрузка...') : ('Сохранить')}\n        </ButtonSubmit>\n      </PopupWithForm>\n    );\n  }\n\n  handleChange = () => {\n    const avatar = this.avatar.current;\n\n    if (!avatar.validity.valid) {\n      this.setState({ isFormValid: false });\n      this.showInputError(avatar);\n    } else {\n      this.setState({ isFormValid: true });\n      this.hideInputError();\n    }\n  }\n\n  showInputError = (avatar) => {\n    this.setState({\n      inputClass: 'popup__input_type_error',\n      errorClass: 'popup__error_visible',\n      errorMsg: avatar.validationMessage,\n    });\n  }\n\n  hideInputError = () => {\n    this.setState({\n      inputClass: '',\n      errorClass: '',\n      errorMsg: '',\n    });\n  }\n\n  handleClose = () => {\n    this.props.onClose();\n    this.setState({ isFormValid: false });\n    this.hideInputError();\n  }\n\n  handleSubmit = (evt) => {\n    evt.preventDefault();\n    this.setState({ isLoading: true });\n\n    this.props.onUpdateAvatar({\n      avatar: this.avatar.current.value,\n    })\n      .finally(() => {\n        this.setState({\n          isFormValid: false,\n          isLoading: false,\n        });\n        this.hideInputError();\n      });\n  }\n}\n\nexport default EditAvatarPopup;\n","import React from 'react';\nimport PopupWithForm from './PopupWithForm';\nimport ButtonSubmit from './ButtonSubmit';\n\nclass AddCardPopup extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.title = React.createRef();\n    this.src = React.createRef();\n\n    this.state = {\n      formProps: {\n        title: {\n          inputClass: '',\n          errorClass: '',\n          errorMsg: '',\n        },\n        src: {\n          inputClass: '',\n          errorClass: '',\n          errorMsg: '',\n        }\n      },\n      isFormValid: false,\n      isLoading: false\n    };\n  }\n\n  render() {\n    return (\n      <PopupWithForm\n        name=\"card\"\n        title=\"Новое место\"\n        isOpen={this.props.isOpen}\n        onClose={this.handleClose}\n        onSubmit={this.handleSubmit}\n      >\n        <label className=\"popup__label\" htmlFor=\"title-input\">\n          <input \n            type=\"text\"\n            name=\"title\"\n            className={`popup__input ${this.state.formProps.title.inputClass}`}\n            id=\"title-input\"\n            ref={this.title}\n            onChange={this.handleChange}\n            placeholder=\"Название\"\n            minLength={1}\n            maxLength={30}\n            required={true}\n          />\n          <span \n            className={`popup__error ${this.state.formProps.title.errorClass}`} \n            id=\"title-input-error\"\n          >\n            {this.state.formProps.title.errorMsg}\n          </span>\n        </label>\n        <label className=\"popup__label\" htmlFor=\"src-input\">\n          <input \n            type=\"url\"\n            name=\"src\"\n            className={`popup__input ${this.state.formProps.src.inputClass}`}\n            id=\"src-input\"\n            ref={this.src}\n            onChange={this.handleChange}\n            placeholder=\"Ссылка\"\n            required={true}\n          />\n          <span \n            className={`popup__error ${this.state.formProps.src.errorClass}`} \n            id=\"src-input-error\"\n          >\n            {this.state.formProps.src.errorMsg}\n          </span>\n        </label>\n        <ButtonSubmit isDisabled={!this.state.isFormValid}>\n          {this.state.isLoading ? ('Загрузка...') : ('Создать')}\n        </ButtonSubmit>\n      </PopupWithForm>\n    );\n  }\n\n  handleChange = (evt) => {\n    const target = this[evt.target.name].current;\n    const input = target.name;\n\n    const updatedForm = { ...this.state.formProps };\n    const updatedInput = { ...updatedForm[input] };\n\n    let isFormValid = true;\n    for (let input in updatedForm) {\n      isFormValid = isFormValid\n        && this[input].current.validity.valid;\n    }\n\n    if (!target.validity.valid) {\n      this.showInputError(target, updatedInput);\n    } else {\n      this.hideInputError(updatedInput);\n    }\n\n    updatedForm[input] = updatedInput;\n\n    this.setState({\n      formProps: updatedForm,\n      isFormValid: isFormValid\n    });\n  }\n\n  showInputError = (name, input) => {\n    input.inputClass = 'popup__input_type_error';\n    input.errorClass = 'popup__error_visible';\n    input.errorMsg = name.validationMessage;\n  }\n\n  hideInputError = (input) => {\n    input.inputClass = '';\n    input.errorClass = '';\n    input.errorMsg = '';\n  }\n\n  handleClose = () => {\n    const form = this.state.formProps;\n\n    this.props.onClose();\n    this.setState({ isFormValid: false });\n\n    for (let input in form) {\n      this.hideInputError(form[input]);\n    }\n  }\n\n  handleSubmit = (evt) => {\n    evt.preventDefault();\n    this.setState({ isLoading: true });\n\n    const form = this.state.formProps;\n\n    this.props.onAddCardSubmit({\n      name: this.title.current.value,\n      link: this.src.current.value\n    })\n    .finally(() => {\n      this.setState({\n        isFormValid: false,\n        isLoading: false\n      });\n      for (let input in form) {\n        this.hideInputError(form[input]);\n      }\n    });\n  }\n}\n\nexport default AddCardPopup;\n","import React from 'react';\nimport PopupWithForm from './PopupWithForm';\nimport ButtonSubmit from './ButtonSubmit';\n\nfunction ConfirmPopup(props) {\n  const { card, isOpen, onClose } = props;\n\n  const handleSubmit = (evt) => {\n    evt.preventDefault();\n\n    props.onCardDeleteConfirm(card._id);\n  };\n\n  return (\n    <PopupWithForm\n      name=\"confirm\"\n      title=\"Вы уверены?\"\n      isOpen={isOpen}\n      onClose={onClose}\n      onSubmit={handleSubmit}\n    >\n      <ButtonSubmit>Да</ButtonSubmit>\n    </PopupWithForm>\n  );\n}\n\nexport default ConfirmPopup;\n","import React from 'react';\nimport ButtonClose from './ButtonClose';\nimport PopupContainer from './PopupContainer';\n\nfunction ImagePopup(props) {\n  const { card, isOpen, onClose } = props;\n\n  return (isOpen ? (\n    <div className=\"popup popup_type_img popup_opened\">\n      <PopupContainer\n        className=\"popup__img-wrapper\"\n        closeHandler={onClose}\n      >\n        <img\n          src={card.link}\n          alt={card.name}\n          className=\"popup__img\"\n        />\n        <p className=\"popup__img-title\">{card.name}</p>\n        <ButtonClose closeHandler={onClose} />\n      </PopupContainer>\n    </div>\n  ) : (\n    <div className=\"popup popup_type_img\"></div>\n  ));\n}\n\nexport default ImagePopup;\n","import React from 'react';\nimport { Route, Redirect } from 'react-router-dom';\n\nconst ProtectedRoute = ({ ...props }) => {\n  const { loggedIn, children } = props;\n\n  return (\n    <Route>\n      {\n        () => (loggedIn === true) ? (\n          children\n        ) : (\n          <Redirect to='/signin' />\n        )\n      }\n    </Route>\n  );\n};\n\nexport default ProtectedRoute;\n","import React from 'react';\nimport { Link } from 'react-router-dom';\n\nfunction BookForm ({\n  name,\n  title,\n  buttonText,\n  link,\n  onSubmit,\n  children,\n  path\n}) {\n  return (\n    <div className=\"book\">\n      <h2 className=\"book__title\">{title}</h2>\n      <form\n        className=\"book__form\"\n        name={name}\n        noValidate\n        onSubmit={onSubmit}\n      >\n        <div className=\"book__content\">\n          {children}\n        </div>\n        <button type=\"submit\" className=\"book__button\">{buttonText}</button>\n      </form>\n      <Link to={path} className=\"book__link\">{link}</Link>\n    </div>\n  );\n}\n\nexport default BookForm;\n","import React from 'react';\nimport ButtonClose from './ButtonClose';\nimport PopupContainer from './PopupContainer';\n\nfunction InfoTooltip({ infoData, isOpen, onClose }) {\n  return (isOpen ? (\n    <div className={`popup popup_type_info popup_opened`}>\n      <PopupContainer\n        className=\"popup__container popup__container_type_info\"\n        closeHandler={onClose}\n      >\n        <img\n          src={infoData.src}\n          alt={infoData.alt}\n          className=\"popup__info-sign\"\n        />\n        <p className=\"popup__info-title\">{infoData.text}</p>\n        <ButtonClose closeHandler={onClose} />\n      </PopupContainer>\n    </div>\n  ) : (\n    <div className={'popup popup_type_info'}></div>\n  ));\n}\n\nexport default InfoTooltip;\n","import React, { useState } from 'react';\nimport BookForm from './BookForm';\nimport Header from './Header';\nimport InfoTooltip from './InfoTooltip';\nimport fail from '../images/popup/__info-sign/fail.svg';\nimport success from '../images/popup/__info-sign/success.svg';\n\nconst Login = (props) => {\n  const { onLogin, isTooltipOpen, onTooltipClose } = props;\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const [infoData, setInfoData] = useState({\n    text: 'Вы успешно зарегистрировались!',\n    alt: 'Успешно',\n    src: success,\n  });\n\n  const renderErrorMsg = () => (\n    setInfoData({\n      text: 'Что-то пошло не так! Попробуйте ещё раз.',\n      alt: 'Ошибка',\n      src: fail,\n    })\n  );\n\n  const handleSubmit = (evt) => {\n    evt.preventDefault();\n\n    if (!email || !password) {\n      renderErrorMsg();\n    }\n\n    onLogin({ email, password })\n      .then((res) => {\n        if (!res) {\n          setEmail('');\n          setPassword('');\n          renderErrorMsg();\n        }\n      })\n      .catch((err) => console.error(err));\n  };\n\n  return (\n    <>\n      <InfoTooltip\n        infoData={infoData}\n        isOpen={isTooltipOpen}\n        onClose={onTooltipClose}\n      />\n      <Header link=\"Регистрация\" path=\"/signup\" />\n      <BookForm\n        name=\"login\"\n        title=\"Вход\"\n        buttonText=\"Войти\"\n        link=\"Ещё не зарегистрированы? Регистрация\"\n        onSubmit={handleSubmit}\n        path=\"/signup\"\n      >\n        <label className=\"book__label\" htmlFor=\"email\">\n          <input\n            type=\"email\"\n            name=\"email\"\n            id=\"email\"\n            className=\"book__input\"\n            placeholder=\"Email\"\n            value={email}\n            onChange={(evt) => setEmail(evt.target.value)}\n            required={true}\n          />\n        </label>\n        <label className=\"book__label\" htmlFor=\"password\">\n          <input\n            type=\"password\"\n            name=\"password\"\n            id=\"password\"\n            className=\"book__input\"\n            placeholder=\"Пароль\"\n            value={password}\n            onChange={(evt) => setPassword(evt.target.value)}\n            required={true}\n          />\n        </label>\n      </BookForm>\n    </>\n  );\n};\n\nexport default Login;\n","import React, { useState } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport BookForm from './BookForm';\nimport Header from './Header';\nimport InfoTooltip from './InfoTooltip';\nimport fail from '../images/popup/__info-sign/fail.svg';\n\nconst Register = (props) => {\n  const { onRegister, isTooltipOpen, onTooltipClose } = props;\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const [infoData, setInfoData] = useState({});\n  const history = useHistory();\n\n  const handleSubmit = (evt) => {\n    evt.preventDefault();\n\n    onRegister({ email, password })\n      .then((res) => {\n        if (res) {\n          return history.push('/signin');\n        }\n\n        setEmail('');\n        setPassword('');\n        setInfoData({\n          text: 'Что-то пошло не так! Попробуйте ещё раз.',\n          alt: 'Ошибка',\n          src: fail,\n        });\n      })\n      .catch((err) => console.error(err));\n  };\n\n  return (\n    <>\n      <InfoTooltip\n        infoData={infoData}\n        isOpen={isTooltipOpen}\n        onClose={onTooltipClose}\n      />\n      <Header link=\"Войти\" path=\"/signin\" />\n      <BookForm\n        name=\"book\"\n        title=\"Регистрация\"\n        buttonText=\"Зарегистрироваться\"\n        link=\"Уже зарегистрированы? Войти\"\n        onSubmit={handleSubmit}\n        path=\"/signin\"\n      >\n        <label className=\"book__label\" htmlFor=\"email\">\n          <input\n            type=\"email\"\n            name=\"email\"\n            id=\"email\"\n            className=\"book__input\"\n            placeholder=\"Email\"\n            value={email}\n            onChange={(evt) => setEmail(evt.target.value)}\n            required={true}\n          />\n        </label>\n        <label className=\"book__label\" htmlFor=\"password\">\n          <input\n            type=\"password\"\n            name=\"password\"\n            id=\"password\"\n            className=\"book__input\"\n            placeholder=\"Пароль\"\n            value={password}\n            onChange={(evt) => setPassword(evt.target.value)}\n            required={true}\n          />\n        </label>\n      </BookForm>\n    </>\n  );\n};\n\nexport default Register;\n","export const BASE_URL = 'https://auth.nomoreparties.co';\n\nexport const register = ({ password, email }) => {\n  return fetch(`${BASE_URL}/signup`, {\n    method: 'POST',\n    headers: {\n      'Accept': 'application/json',\n      'Content-Type': 'application/json',\n    },\n    body: JSON.stringify({ password, email }),\n  })\n    .then((res) => res.json())\n    .then((data) => data)\n    .catch((err) => console.error(err));\n};\n\nexport const login = ({ email, password }) => {\n  return fetch(`${BASE_URL}/signin`, {\n    method: 'POST',\n    headers: {\n      'Accept': 'application/json',\n      'Content-Type': 'application/json',\n    },\n    body: JSON.stringify({ email, password }),\n  })\n    .then((res) => res.json())\n    .then((data) => {\n      if (data.token) {\n        localStorage.setItem('token', data.token);\n\n        return data;\n      }\n    })\n    .catch((err) => console.error(err));\n};\n\nexport const checkToken = (token) => {\n  return fetch(`${BASE_URL}/users/me`, {\n    method: 'GET',\n    headers: {\n      'Accept': 'application/json',\n      'Content-Type': 'application/json',\n      'Authorization': `Bearer ${token}`,\n    },\n  })\n    .then((res) => res.json())\n    .then((data) => data)\n    .catch((err) => console.error(err));\n};\n","class Api {\n  constructor(options) {\n    this._baseUrl = options.baseUrl;\n    this._headers = options.headers;\n  }\n\n  _fetch(url, params) {\n    return fetch(this._baseUrl + url, {\n      ...params,\n      headers: this._headers,\n      body: JSON.stringify(params.body),\n    })\n      .then((response) => {\n        if (response.ok) {\n          return response.json();\n        }\n\n        return Promise.reject(`Ошибка: ${response.status}`);\n      });\n  }\n\n  getUserInfo() {\n    return this._fetch('/users/me', {\n      method: 'GET',\n    });\n  }\n\n  getCardList() {\n    return this._fetch('/cards', {\n      method: 'GET',\n    });\n  }\n\n  postCard({ name, link }) {\n    return this._fetch('/cards', {\n      method: 'POST',\n      body: {\n        name,\n        link,\n      },\n    });\n  }\n\n  changeCardLikeStatus(cardID, like) {\n    return this._fetch('/cards/likes/' + cardID, {\n      method: like ? 'PUT' : 'DELETE',\n    });\n  }\n\n  deleteCard(cardID) {\n    return this._fetch('/cards/' + cardID, {\n      method: 'DELETE',\n    });\n  }\n\n  setUserInfo({ name, about }) {\n    return this._fetch('/users/me', {\n      method: 'PATCH',\n      body: {\n        name,\n        about,\n      },\n    });\n  }\n\n  setUserAvatar({ avatar }) {\n    return this._fetch('/users/me/avatar', {\n      method: 'PATCH',\n      body: {\n        avatar,\n      },\n    });\n  }\n}\n\nexport const api = new Api({\n  baseUrl: 'https://mesto.nomoreparties.co/v1/cohort-12',\n  headers: {\n    authorization: 'bd0f2499-7585-4f83-9366-da3fa3857f94',\n    'Content-Type': 'application/json',\n  },\n});\n","import React, { useState, useEffect } from 'react';\nimport {\n  Route,\n  Switch,\n  useHistory,\n} from 'react-router-dom';\nimport Header from './Header';\nimport Main from './Main';\nimport Footer from './Footer';\nimport EditProfilePopup from './EditProfilePopup';\nimport EditAvatarPopup from './EditAvatarPopup';\nimport AddCardPopup from './AddCardPopup';\nimport ConfirmPopup from './ConfirmPopup';\nimport ImagePopup from './ImagePopup';\nimport ProtectedRoute from './ProtectedRoute';\nimport Login from './Login';\nimport Register from './Register';\nimport * as auth from '../utils/auth';\nimport { api } from '../utils/api';\nimport { CurrentUserContext } from '../contexts/CurrentUserContext';\n\nconst App = () => {\n  const [currentUser, setCurrentUser] = useState(null);\n  const [isEditAvatarPopupOpen, setIsEditAvatarPopupOpen] = useState(false);\n  const [isEditProfilePopupOpen, setIsEditProfilePopupOpen] = useState(false);\n  const [isAddCardPopupOpen, setIsAddCardPopupOpen] = useState(false);\n  const [isImagePopupOpen, setIsImagePopupOpen] = useState(false);\n  const [isConfirmPopupOpen, setIsConfirmPopupOpen] = useState(false);\n  const [isInfoTooltipOpen, setIsInfoTooltipOpen] = useState(false);\n  const [selectedCard, setSelectedCard] = useState(null);\n  const [cards, setCards] = useState([]);\n  const [loggedIn, setLoggedIn] = useState(false);\n  const [email, setEmail] = useState('');\n  const history = useHistory();\n  \n  useEffect(() => {\n    Promise.all([\n      localStorage.getItem('token'),\n      api.getUserInfo(),\n      api.getCardList(),    \n    ])\n      .then(([token, user, cards]) => {\n        if (token) {\n          auth.checkToken(token)\n            .then((res) => {\n              if (res) {\n                setEmail(res.data.email);\n                setLoggedIn(true);\n                history.push('/');\n              }\n            });\n        }\n\n        setCurrentUser(user);\n        setCards(cards);    \n      })\n      .catch((err) => console.error(err));\n  }, []);\n\n  const onLogin = ({ email, password }) => {\n    return auth.login({ email, password })\n      .then((res) => {\n        if (res && res.token) {\n          setEmail(email);\n          setLoggedIn(true);\n          history.push('/');\n          return true;\n        }\n\n        setIsInfoTooltipOpen(true);\n        return Promise.reject(new Error('on Sign in'));\n      })\n      .catch((err) => console.error(err));\n  };\n\n  const onRegister = ({ email, password }) => {\n    return auth.register({ email, password })\n      .then((res) => {\n        if (res.data) {\n          setEmail(res.data.email);\n          setIsInfoTooltipOpen(true);\n          return true;\n        }\n\n        setIsInfoTooltipOpen(true);\n        return Promise.reject(new Error('on Sign up'));\n      })\n      .catch((err) => console.error(err));\n  };\n\n  const onSignOut = () => {\n    localStorage.removeItem('token');\n    history.push('/signin');\n  };\n\n  const handleEditAvatarClick = () => {\n    setIsEditAvatarPopupOpen(true);\n  };\n\n  const handleEditProfileClick = () => {\n    setIsEditProfilePopupOpen(true);\n  };\n\n  const handleAddCardClick = () => {\n    setIsAddCardPopupOpen(true);\n  };\n\n  const handleCardClick = (card) => {\n    setSelectedCard(card);\n    setIsImagePopupOpen(true);\n  };\n\n  const handleConfirmPopup = (card) => {\n    setSelectedCard(card);\n    setIsConfirmPopupOpen(true);\n  };\n\n  const closeAllPopups = () => {\n    setIsEditAvatarPopupOpen(false);\n    setIsEditProfilePopupOpen(false);\n    setIsAddCardPopupOpen(false);\n    setIsImagePopupOpen(false);\n    setIsConfirmPopupOpen(false);\n    setIsInfoTooltipOpen(false);\n    setSelectedCard(null);\n  };\n\n  const handleUpdateUser = ({ name, about }) => {\n    return api.setUserInfo({ name, about })\n      .then((user) => {\n        setCurrentUser(user);\n        closeAllPopups();\n      })\n      .catch((err) => console.error(err));\n  };\n\n  const handleUpdateAvatar = ({ avatar }) => {\n    return api.setUserAvatar({ avatar })\n      .then((user) => {\n        setCurrentUser(user);\n        closeAllPopups();\n      })\n      .catch((err) => console.error(err));\n  };\n\n  const handleCardLike = (card) => {\n    const isLiked = card.likes.some((i) => i._id === currentUser._id);\n\n    return api.changeCardLikeStatus(card._id, !isLiked)\n      .then((newCard) => {\n        const newCards = cards.map((c) => (\n          c._id === card._id ? newCard : c\n        ));\n\n        setCards(newCards);\n      })\n      .catch((err) => console.error(err));\n  };\n\n  const handleCardDelete = (cardID) => {\n    return api.deleteCard(cardID)\n      .then((newCard) => {\n        const newCards = cards.filter((c) => (\n          c._id === cardID ? null : newCard\n        ));\n\n        setCards(newCards);\n        closeAllPopups();\n      })\n      .catch((err) => console.error(err));\n  };\n\n  const handleAddCardSubmit = ({ name, link }) => {\n    return api.postCard({ name, link })\n      .then((newCard) => {\n        setCards([newCard, ...cards]);\n        closeAllPopups();\n      })\n      .catch((err) => console.error(err));\n  };\n\n  if (!currentUser) return null;\n\n  return (\n    <div className=\"page__content\">\n      <Switch>\n        <ProtectedRoute\n          exact path=\"/\"\n          loggedIn={loggedIn}\n          >\n          <CurrentUserContext.Provider value={currentUser}>\n            <Header\n              onSignOut={onSignOut}\n              email={email}\n              loggedIn={loggedIn}\n            />\n            <Main\n              onEditAvatar={handleEditAvatarClick}\n              onEditProfile={handleEditProfileClick}\n              onAddCard={handleAddCardClick}\n              onCardClick={handleCardClick}\n              cards={cards}\n              onCardLike={handleCardLike}\n              onCardDelete={handleConfirmPopup}\n            />\n            <EditAvatarPopup\n              isOpen={isEditAvatarPopupOpen}\n              onClose={closeAllPopups}\n              onUpdateAvatar={handleUpdateAvatar}\n            />\n            <EditProfilePopup\n              isOpen={isEditProfilePopupOpen}\n              onClose={closeAllPopups}\n              onUpdateUser={handleUpdateUser}\n            />\n            <AddCardPopup\n              isOpen={isAddCardPopupOpen}\n              onClose={closeAllPopups}\n              onAddCardSubmit={handleAddCardSubmit}\n            />\n            <ConfirmPopup\n              card={selectedCard}\n              isOpen={isConfirmPopupOpen}\n              onClose={closeAllPopups}\n              onCardDeleteConfirm={handleCardDelete}\n            />\n            <ImagePopup\n              card={selectedCard}\n              isOpen={isImagePopupOpen}\n              onClose={closeAllPopups}\n            />\n          </CurrentUserContext.Provider>\n        </ProtectedRoute>\n        <Route path=\"/signin\">\n          <Login\n            onLogin={onLogin}\n            isTooltipOpen={isInfoTooltipOpen}\n            onTooltipClose={closeAllPopups}\n          />\n        </Route>\n        <Route path=\"/signup\">\n          <Register\n            onRegister={onRegister}\n            isTooltipOpen={isInfoTooltipOpen}\n            onTooltipClose={closeAllPopups}\n          />\n        </Route>\n      </Switch>\n      <Footer />\n    </div>\n  );\n};\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter } from 'react-router-dom';\nimport './index.css';\nimport App from './components/App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <BrowserRouter>\n      <App />\n    </BrowserRouter>\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n\nserviceWorker.unregister();\n"],"sourceRoot":""}